{"version":3,"file":"smart-table-core.es.js","sources":["../../node_modules/smart-table-operators/dist/src/index.js","../../node_modules/smart-table-json-pointer/dist/src/index.js","../../node_modules/smart-table-sort/dist/src/index.js","../../node_modules/smart-table-filter/dist/src/index.js","../../node_modules/re-template-tag/esm/index.js","../../node_modules/smart-table-search/dist/src/regex.js","../../node_modules/smart-table-events/dist/src/index.js","../src/slice.js","../src/directives/table.js","../src/directives/filter.js","../src/directives/search.js","../src/directives/pagination.js","../src/directives/sort.js","../src/directives/summary.js","../src/directives/working-indicator.js","../src/index.js"],"sourcesContent":["export const swap = (f) => (a, b) => f(b, a);\nexport const compose = (first, ...fns) => (...args) => fns.reduce((previous, current) => current(previous), first(...args));\nexport const curry = (fn, arityLeft) => {\n    const arity = arityLeft || fn.length;\n    return (...args) => {\n        const argLength = args.length || 1;\n        if (arity === argLength) {\n            return fn(...args);\n        }\n        const func = (...moreArgs) => fn(...args, ...moreArgs);\n        return curry(func, arity - args.length);\n    };\n};\nexport const apply = (fn) => (...args) => fn(...args);\nexport const tap = (fn) => arg => {\n    fn(arg);\n    return arg;\n};\n","export const pointer = (path) => {\n    const parts = path.split('.');\n    const partial = (obj = {}, parts = []) => {\n        const p = parts.shift();\n        const current = obj[p];\n        return (current === undefined || current === null || parts.length === 0) ?\n            current : partial(current, parts);\n    };\n    const set = (target, newTree) => {\n        let current = target;\n        const [leaf, ...intermediate] = parts.reverse();\n        for (const key of intermediate.reverse()) {\n            if (current[key] === undefined) {\n                current[key] = {};\n                current = current[key];\n            }\n        }\n        current[leaf] = Object.assign(current[leaf] || {}, newTree);\n        return target;\n    };\n    return {\n        get(target) {\n            return partial(target, [...parts]);\n        },\n        set\n    };\n};\n","import { swap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nconst defaultComparator = (a, b) => {\n    if (a === b) {\n        return 0;\n    }\n    if (a === undefined) {\n        return 1;\n    }\n    if (b === undefined) {\n        return -1;\n    }\n    return a < b ? -1 : 1;\n};\nexport var SortDirection;\n(function (SortDirection) {\n    SortDirection[\"ASC\"] = \"asc\";\n    SortDirection[\"DESC\"] = \"desc\";\n    SortDirection[\"NONE\"] = \"none\";\n})(SortDirection || (SortDirection = {}));\nconst sortByProperty = (prop, comparator) => {\n    const propGetter = pointer(prop).get;\n    return (a, b) => comparator(propGetter(a), propGetter(b));\n};\nexport const defaultSortFactory = (conf) => {\n    const { pointer, direction = \"asc\" /* ASC */, comparator = defaultComparator } = conf;\n    if (!pointer || direction === \"none\" /* NONE */) {\n        return (array) => [...array];\n    }\n    const orderFunc = sortByProperty(pointer, comparator);\n    const compareFunc = direction === \"desc\" /* DESC */ ? swap(orderFunc) : orderFunc;\n    return (array) => [...array].sort(compareFunc);\n};\n","import { compose } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nvar Type;\n(function (Type) {\n    Type[\"BOOLEAN\"] = \"boolean\";\n    Type[\"NUMBER\"] = \"number\";\n    Type[\"DATE\"] = \"date\";\n    Type[\"STRING\"] = \"string\";\n})(Type || (Type = {}));\nconst typeExpression = (type) => {\n    switch (type) {\n        case Type.BOOLEAN:\n            return Boolean;\n        case Type.NUMBER:\n            return Number;\n        case Type.DATE:\n            return val => new Date(val);\n        case Type.STRING:\n            return compose(String, val => val.toLowerCase());\n        default:\n            return val => val;\n    }\n};\nexport var FilterOperator;\n(function (FilterOperator) {\n    FilterOperator[\"INCLUDES\"] = \"includes\";\n    FilterOperator[\"IS\"] = \"is\";\n    FilterOperator[\"IS_NOT\"] = \"isNot\";\n    FilterOperator[\"LOWER_THAN\"] = \"lt\";\n    FilterOperator[\"GREATER_THAN\"] = \"gt\";\n    FilterOperator[\"GREATER_THAN_OR_EQUAL\"] = \"gte\";\n    FilterOperator[\"LOWER_THAN_OR_EQUAL\"] = \"lte\";\n    FilterOperator[\"EQUALS\"] = \"equals\";\n    FilterOperator[\"NOT_EQUALS\"] = \"notEquals\";\n    FilterOperator[\"ANY_OF\"] = \"anyOf\";\n})(FilterOperator || (FilterOperator = {}));\nconst not = fn => input => !fn(input);\nconst is = value => input => Object.is(value, input);\nconst lt = value => input => input < value;\nconst gt = value => input => input > value;\nconst equals = value => input => value === input;\nconst includes = value => input => input.includes(value);\nconst anyOf = value => input => value.includes(input);\nconst operators = {\n    [\"includes\" /* INCLUDES */]: includes,\n    [\"is\" /* IS */]: is,\n    [\"isNot\" /* IS_NOT */]: compose(is, not),\n    [\"lt\" /* LOWER_THAN */]: lt,\n    [\"gte\" /* GREATER_THAN_OR_EQUAL */]: compose(lt, not),\n    [\"gt\" /* GREATER_THAN */]: gt,\n    [\"lte\" /* LOWER_THAN_OR_EQUAL */]: compose(gt, not),\n    [\"equals\" /* EQUALS */]: equals,\n    [\"notEquals\" /* NOT_EQUALS */]: compose(equals, not),\n    [\"anyOf\" /* ANY_OF */]: anyOf\n};\nconst every = fns => (...args) => fns.every(fn => fn(...args));\nexport const predicate = ({ value = '', operator = \"includes\" /* INCLUDES */, type }) => {\n    const typeIt = typeExpression(type);\n    const operateOnTyped = compose(typeIt, operators[operator]);\n    const predicateFunc = operateOnTyped(value);\n    return compose(typeIt, predicateFunc);\n};\n// Avoid useless filter lookup (improve perf)\nconst normalizeClauses = (conf) => {\n    const output = {};\n    const validPath = Object.keys(conf).filter(path => Array.isArray(conf[path]));\n    validPath.forEach(path => {\n        const validClauses = conf[path].filter(c => c.value !== '');\n        if (validClauses.length > 0) {\n            output[path] = validClauses;\n        }\n    });\n    return output;\n};\nexport const filter = (filter) => {\n    const normalizedClauses = normalizeClauses(filter);\n    const funcList = Object.keys(normalizedClauses).map(path => {\n        const getter = pointer(path).get;\n        const clauses = normalizedClauses[path].map(predicate);\n        return compose(getter, every(clauses));\n    });\n    const filterPredicate = every(funcList);\n    return array => array.filter(filterPredicate);\n};\n","export function re(strs, ...substs) {\n    let reStr = transformRaw(strs.raw[0]);\n    for (const [i, subst] of substs.entries()) {\n        if (subst instanceof RegExp) {\n            reStr += subst.source;\n        } else if (typeof subst === 'string') {\n            reStr += quoteText(subst);\n        } else {\n            throw new Error('Illegal substitution: '+subst);\n        }\n        reStr += transformRaw(strs.raw[i+1]);\n    }\n    let flags = '';\n    if (reStr.startsWith('/')) {\n        const lastSlashIndex = reStr.lastIndexOf('/');\n        if (lastSlashIndex === 0) {\n            throw new Error('If the `re` string starts with a slash, it must end with a second slash and zero or more flags: '+reStr);\n        }\n        flags = reStr.slice(lastSlashIndex+1);\n        reStr = reStr.slice(1, lastSlashIndex);\n    }\n    return new RegExp(reStr, flags);\n}\n\nfunction transformRaw(str) {\n    return str.replace(/\\\\`/g, '`');\n}\n\n/**\n * All special characters are escaped, because you may want to quote several characters inside parentheses or square brackets.\n */\nexport function quoteText(text) {\n    return text.replace(/[\\\\^$.*+?()[\\]{}|=!<>:-]/g, '\\\\$&');\n}","import { pointer } from 'smart-table-json-pointer';\nimport { re } from 're-template-tag';\nexport const regexp = (input) => {\n    const { value, scope = [], escape = false, flags = '' } = input;\n    const searchPointers = scope.map(field => pointer(field).get);\n    if (scope.length === 0 || !value) {\n        return (array) => array;\n    }\n    const regex = escape === true ? re `/${value}/${flags}` : new RegExp(value, flags);\n    return (array) => array.filter(item => searchPointers.some(p => regex.test(String(p(item)))));\n};\n","export const emitter = () => {\n    const listenersLists = {};\n    const instance = {\n        on(event, ...listeners) {\n            listenersLists[event] = (listenersLists[event] || []).concat(listeners);\n            return instance;\n        },\n        dispatch(event, ...args) {\n            const listeners = listenersLists[event] || [];\n            for (const listener of listeners) {\n                listener(...args);\n            }\n            return instance;\n        },\n        off(event, ...listeners) {\n            if (event === undefined) {\n                Object.keys(listenersLists).forEach(ev => instance.off(ev));\n            }\n            else {\n                const list = listenersLists[event] || [];\n                listenersLists[event] = listeners.length ? list.filter(listener => !listeners.includes(listener)) : [];\n            }\n            return instance;\n        }\n    };\n    return instance;\n};\nexport const proxyListener = (eventMap) => ({ emitter }) => {\n    const eventListeners = {};\n    const proxy = {\n        off(ev) {\n            if (!ev) {\n                Object.keys(eventListeners).forEach(eventName => proxy.off(eventName));\n            }\n            if (eventListeners[ev]) {\n                emitter.off(ev, ...eventListeners[ev]);\n            }\n            return proxy;\n        }\n    };\n    for (const ev of Object.keys(eventMap)) {\n        const method = eventMap[ev];\n        eventListeners[ev] = [];\n        proxy[method] = function (...listeners) {\n            eventListeners[ev] = eventListeners[ev].concat(listeners);\n            emitter.on(ev, ...listeners);\n            return proxy;\n        };\n    }\n    return proxy;\n};\n","export const sliceFactory = ({ page = 1, size } = { page: 1 }) => (array = []) => {\n    const actualSize = size || array.length;\n    const offset = (page - 1) * actualSize;\n    return array.slice(offset, offset + actualSize);\n};\n","import { curry, tap, compose } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nimport { emitter } from 'smart-table-events';\nimport { sliceFactory } from '../slice';\nexport var SmartTableEvents;\n(function (SmartTableEvents) {\n    SmartTableEvents[\"TOGGLE_SORT\"] = \"TOGGLE_SORT\";\n    SmartTableEvents[\"DISPLAY_CHANGED\"] = \"DISPLAY_CHANGED\";\n    SmartTableEvents[\"PAGE_CHANGED\"] = \"CHANGE_PAGE\";\n    SmartTableEvents[\"EXEC_CHANGED\"] = \"EXEC_CHANGED\";\n    SmartTableEvents[\"FILTER_CHANGED\"] = \"FILTER_CHANGED\";\n    SmartTableEvents[\"SUMMARY_CHANGED\"] = \"SUMMARY_CHANGED\";\n    SmartTableEvents[\"SEARCH_CHANGED\"] = \"SEARCH_CHANGED\";\n    SmartTableEvents[\"EXEC_ERROR\"] = \"EXEC_ERROR\";\n})(SmartTableEvents || (SmartTableEvents = {}));\nconst curriedPointer = (path) => {\n    const { get, set } = pointer(path);\n    return { get, set: curry(set) };\n};\nexport const tableDirective = ({ sortFactory, tableState, data, filterFactory, searchFactory }) => {\n    let filteredCount = data.length;\n    let matchingItems = data;\n    const table = emitter();\n    const sortPointer = curriedPointer('sort');\n    const slicePointer = curriedPointer('slice');\n    const filterPointer = curriedPointer('filter');\n    const searchPointer = curriedPointer('search');\n    // We need to register in case the summary comes from outside (like server data)\n    table.on(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, ({ filteredCount: count }) => {\n        filteredCount = count;\n    });\n    const safeAssign = curry((base, extension) => Object.assign({}, base, extension));\n    const dispatch = curry(table.dispatch, 2);\n    const dispatchSummary = (filtered) => {\n        matchingItems = filtered;\n        return dispatch(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, {\n            page: tableState.slice.page,\n            size: tableState.slice.size,\n            filteredCount: filtered.length\n        });\n    };\n    const exec = ({ processingDelay = 20 } = { processingDelay: 20 }) => {\n        table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: true });\n        setTimeout(() => {\n            try {\n                const filterFunc = filterFactory(filterPointer.get(tableState));\n                const searchFunc = searchFactory(searchPointer.get(tableState));\n                const sortFunc = sortFactory(sortPointer.get(tableState));\n                const sliceFunc = sliceFactory(slicePointer.get(tableState));\n                const execFunc = compose(filterFunc, searchFunc, tap(dispatchSummary), sortFunc, sliceFunc);\n                const displayed = execFunc(data);\n                table.dispatch(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, displayed.map(d => ({\n                    index: data.indexOf(d),\n                    value: d\n                })));\n            }\n            catch (err) {\n                table.dispatch(\"EXEC_ERROR\" /* EXEC_ERROR */, err);\n            }\n            finally {\n                table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: false });\n            }\n        }, processingDelay);\n    };\n    const updateTableState = curry((pter, ev, newPartialState) => compose(safeAssign(pter.get(tableState)), tap(dispatch(ev)), pter.set(tableState))(newPartialState));\n    const resetToFirstPage = () => updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */, { page: 1 });\n    const tableOperation = (pter, ev) => compose(updateTableState(pter, ev), resetToFirstPage, () => table.exec() // We wrap within a function so table.exec can be overwritten (when using with a server for example)\n    );\n    const api = {\n        sort: tableOperation(sortPointer, \"TOGGLE_SORT\" /* TOGGLE_SORT */),\n        filter: tableOperation(filterPointer, \"FILTER_CHANGED\" /* FILTER_CHANGED */),\n        search: tableOperation(searchPointer, \"SEARCH_CHANGED\" /* SEARCH_CHANGED */),\n        slice: compose(updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */), () => table.exec()),\n        exec,\n        async eval(state = tableState) {\n            const sortFunc = sortFactory(sortPointer.get(state));\n            const searchFunc = searchFactory(searchPointer.get(state));\n            const filterFunc = filterFactory(filterPointer.get(state));\n            const sliceFunc = sliceFactory(slicePointer.get(state));\n            const execFunc = compose(filterFunc, searchFunc, sortFunc, sliceFunc);\n            return execFunc(data).map(d => ({ index: data.indexOf(d), value: d }));\n        },\n        onDisplayChange(fn) {\n            table.on(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, fn);\n        },\n        getTableState() {\n            const sort = Object.assign({}, tableState.sort);\n            const search = Object.assign({}, tableState.search);\n            const slice = Object.assign({}, tableState.slice);\n            const filter = {};\n            for (const prop of Object.getOwnPropertyNames(tableState.filter)) {\n                filter[prop] = tableState.filter[prop].map(v => Object.assign({}, v));\n            }\n            return { sort, search, slice, filter };\n        },\n        getMatchingItems() {\n            return [...matchingItems];\n        }\n    };\n    const instance = Object.assign(table, api);\n    Object.defineProperties(instance, {\n        filteredCount: {\n            get() {\n                return filteredCount;\n            }\n        },\n        length: {\n            get() {\n                return data.length;\n            }\n        }\n    });\n    return instance;\n};\n","import { proxyListener } from 'smart-table-events';\nexport { FilterOperator } from 'smart-table-filter';\nconst filterListener = proxyListener({ [\"FILTER_CHANGED\" /* FILTER_CHANGED */]: 'onFilterChange' });\n// todo expose and re-export from smart-table-filter\nexport var FilterType;\n(function (FilterType) {\n    FilterType[\"BOOLEAN\"] = \"boolean\";\n    FilterType[\"NUMBER\"] = \"number\";\n    FilterType[\"DATE\"] = \"date\";\n    FilterType[\"STRING\"] = \"string\";\n})(FilterType || (FilterType = {}));\nexport const filterDirective = ({ table, pointer, operator = \"includes\" /* INCLUDES */, type = \"string\" /* STRING */ }) => {\n    const proxy = filterListener({ emitter: table });\n    return Object.assign({\n        filter(input) {\n            const filterConf = {\n                [pointer]: [\n                    {\n                        value: input,\n                        operator,\n                        type\n                    }\n                ]\n            };\n            return table.filter(filterConf);\n        },\n        state() {\n            return table.getTableState().filter;\n        }\n    }, proxy);\n};\n","import { proxyListener } from 'smart-table-events';\nconst searchListener = proxyListener({ [\"SEARCH_CHANGED\" /* SEARCH_CHANGED */]: 'onSearchChange' });\nexport const searchDirective = ({ table, scope = [] }) => {\n    const proxy = searchListener({ emitter: table });\n    return Object.assign(proxy, {\n        search(input, opts = {}) {\n            return table.search(Object.assign({}, { value: input, scope }, opts));\n        },\n        state() {\n            return table.getTableState().search;\n        }\n    }, proxy);\n};\n","import { proxyListener } from 'smart-table-events';\nconst sliceListener = proxyListener({\n    [\"CHANGE_PAGE\" /* PAGE_CHANGED */]: 'onPageChange',\n    [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange'\n});\nexport const paginationDirective = ({ table }) => {\n    let { slice: { page: currentPage, size: currentSize } } = table.getTableState();\n    let itemListLength = table.filteredCount;\n    const proxy = sliceListener({ emitter: table });\n    const api = {\n        selectPage(p) {\n            return table.slice({ page: p, size: currentSize });\n        },\n        selectNextPage() {\n            return api.selectPage(currentPage + 1);\n        },\n        selectPreviousPage() {\n            return api.selectPage(currentPage - 1);\n        },\n        changePageSize(size) {\n            return table.slice({ page: 1, size });\n        },\n        isPreviousPageEnabled() {\n            return currentPage > 1;\n        },\n        isNextPageEnabled() {\n            return Math.ceil(itemListLength / currentSize) > currentPage;\n        },\n        state() {\n            return Object.assign(table.getTableState().slice, { filteredCount: itemListLength });\n        }\n    };\n    const directive = Object.assign(api, proxy);\n    directive.onSummaryChange(({ page: p, size: s, filteredCount }) => {\n        currentPage = p;\n        currentSize = s;\n        itemListLength = filteredCount;\n    });\n    return directive;\n};\n","import { proxyListener } from 'smart-table-events';\nexport { SortDirection } from 'smart-table-sort';\nconst debounce = (fn, time) => {\n    let timer = null;\n    return (...args) => {\n        if (timer !== null) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(() => fn(...args), time);\n    };\n};\nconst sortListeners = proxyListener({ [\"TOGGLE_SORT\" /* TOGGLE_SORT */]: 'onSortToggle' });\nconst directions = [\"asc\" /* ASC */, \"desc\" /* DESC */];\nexport const sortDirective = ({ pointer, table, cycle = false, debounceTime = 0 }) => {\n    const cycleDirections = cycle === true ? [\"none\" /* NONE */].concat(directions) : [...directions].reverse();\n    const commit = debounce(table.sort, debounceTime);\n    let hit = 0;\n    const proxy = sortListeners({ emitter: table });\n    const directive = Object.assign({\n        toggle() {\n            hit++;\n            const direction = cycleDirections[hit % cycleDirections.length];\n            return commit({ pointer, direction });\n        },\n        state() {\n            return table.getTableState().sort;\n        }\n    }, proxy);\n    directive.onSortToggle(({ pointer: p }) => {\n        hit = pointer !== p ? 0 : hit;\n    });\n    const { pointer: statePointer, direction = \"asc\" /* ASC */ } = directive.state();\n    hit = statePointer === pointer ? (direction === \"asc\" /* ASC */ ? 1 : 2) : 0;\n    return directive;\n};\n","import { proxyListener } from 'smart-table-events';\nconst summaryListener = proxyListener({ [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange' });\nexport const summaryDirective = ({ table }) => summaryListener({ emitter: table });\n","import { proxyListener } from 'smart-table-events';\nconst executionListener = proxyListener({ [\"EXEC_CHANGED\" /* EXEC_CHANGED */]: 'onExecutionChange' });\nexport const workingIndicatorDirective = ({ table }) => executionListener({ emitter: table });\n","import { defaultSortFactory } from 'smart-table-sort';\nimport { filter } from 'smart-table-filter';\nimport { regexp } from 'smart-table-search';\nimport { tableDirective } from './directives/table';\nconst defaultTableState = () => ({ sort: {}, slice: { page: 1 }, filter: {}, search: {} });\nexport const smartTable = ({ sortFactory = defaultSortFactory, filterFactory = filter, searchFactory = regexp, tableState = defaultTableState(), data = [] } = {\n    sortFactory: defaultSortFactory,\n    filterFactory: filter,\n    searchFactory: regexp,\n    tableState: defaultTableState(),\n    data: []\n}, ...tableExtensions) => {\n    const coreTable = tableDirective({ sortFactory, filterFactory, tableState, data, searchFactory });\n    return tableExtensions.reduce((accumulator, newdir) => Object.assign(accumulator, newdir({\n        sortFactory,\n        filterFactory,\n        searchFactory,\n        tableState,\n        data,\n        table: coreTable\n    })), coreTable);\n};\nexport * from './directives/filter';\nexport * from './directives/search';\nexport * from './directives/pagination';\nexport * from './directives/sort';\nexport * from './directives/summary';\nexport * from './directives/table';\nexport * from './directives/working-indicator';\n"],"names":["pointer"],"mappings":"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"}